local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

local remote
local remoteParentName
local currentTycoon = nil

local team_tycoon_association = { 
	["Neutral"]     = nil,
	["Blue Team"]   = "TycoonA",
	["Red Team"]    = "TycoonB",
	["Yeller Team"] = "TycoonC",
	["Green Team"]  = "TycoonD",
	["Black Team"]  = "TycoonE",
	["Pink Team"]   = "TycoonF",
}

local function updateTycoon()
	local player = Players.LocalPlayer
	if player and player.Team then
		currentTycoon = team_tycoon_association[player.Team.Name] or nil
	else
		currentTycoon = nil
	end
end

updateTycoon()
Players.LocalPlayer:GetPropertyChangedSignal("Team"):Connect(updateTycoon)

local function getCurrentTycoon()
	return currentTycoon
end

local function findRemote()
    local modulesFolder = ReplicatedStorage:FindFirstChild("Modules")
    if not modulesFolder then return nil end
    for _, obj in ipairs(modulesFolder:GetChildren()) do
        local lootRemote = obj:FindFirstChild("LootSendinghdollas7eventeenfartdontreadifyoureacheaterifyouareimsosorryyouhavetotypeallthisinjusttog")
        if lootRemote then
            remote = lootRemote
            remoteParentName = obj.Name
            return remote
        end
    end
    return nil
end

local function getRemote()
    local parentModule = ReplicatedStorage.Modules:FindFirstChild(remoteParentName)
    return parentModule and parentModule:FindFirstChild("LootSendinghdollas7eventeenfartdontreadifyoureacheaterifyouareimsosorryyouhavetotypeallthisinjusttog")
end

remote = findRemote()
if not remote then
    findRemote()
end

local worthTable = {}
for i = 1, 2500 do
    worthTable[i] = {math.huge}
end

local args = {
    [1] = {
        ["worth"] = worthTable
    }
}

local autoMoney = false
local autoRebirth = false
local autoOutputMultiplier = false
local autoUpgrades = false
local spamDelay = 0

local function spamRemote()
    while autoMoney do
        local dynamicRemote = getRemote()
        if dynamicRemote then
            dynamicRemote:FireServer(unpack(args))
        else
            remote = findRemote()
            while not remote do
                task.wait(0)
                remote = findRemote()
            end
        end
        task.wait(spamDelay)
    end
end

local function spamRebirth()
	while autoRebirth do
		local currentTycoon = getCurrentTycoon()
		if currentTycoon then
			local rebirthArgs = { [1] = workspace:WaitForChild(currentTycoon) }
			ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Upgrades"):WaitForChild("ConfirmCheck"):FireServer(unpack(rebirthArgs))
		end
		task.wait(spamDelay)
	end
end

local function spamCombined()
	local firstRun = true
	local player = Players.LocalPlayer
	local leaderstats = player:WaitForChild("leaderstats")
	local dollasStat = leaderstats:WaitForChild("Dollas")
	local lastFired = tick()
	while autoMoney and autoRebirth do
		if firstRun then
			for i = 1, 5 do
				local dynamicRemote = getRemote()
				if dynamicRemote then
					dynamicRemote:FireServer(unpack(args))
				else
					remote = findRemote()
					while not remote do
						task.wait(0)
						remote = findRemote()
					end
				end
				task.wait(spamDelay)
			end
			local currentTycoon = getCurrentTycoon()
			if currentTycoon then
				local rebirthArgs = { [1] = workspace:WaitForChild(currentTycoon) }
				ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Upgrades"):WaitForChild("ConfirmCheck"):FireServer(unpack(rebirthArgs))
			end
			firstRun = false
			lastFired = tick()
		else
			if dollasStat.Value == 0 then
				task.wait(3)
				for i = 1, 10 do
					local dynamicRemote = getRemote()
					if dynamicRemote then
						dynamicRemote:FireServer(unpack(args))
					else
						remote = findRemote()
						while not remote do
							task.wait(0)
							remote = findRemote()
						end
					end
					task.wait(spamDelay)
				end
				local currentTycoon = getCurrentTycoon()
				if currentTycoon then
					local rebirthArgs = { [1] = workspace:WaitForChild(currentTycoon) }
					ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Upgrades"):WaitForChild("ConfirmCheck"):FireServer(unpack(rebirthArgs))
				end
				lastFired = tick()
			elseif tick() - lastFired >= 10 then
				for i = 1, 5 do
					local dynamicRemote = getRemote()
					if dynamicRemote then
						dynamicRemote:FireServer(unpack(args))
					else
						remote = findRemote()
						while not remote do
							task.wait(0)
							remote = findRemote()
						end
					end
					task.wait(spamDelay)
				end
				local currentTycoon = getCurrentTycoon()
				if currentTycoon then
					local rebirthArgs = { [1] = workspace:WaitForChild(currentTycoon) }
					ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Upgrades"):WaitForChild("ConfirmCheck"):FireServer(unpack(rebirthArgs))
				end
				lastFired = tick()
			end
		end
		task.wait(0.1)
	end
end

local function spamOutputMultiplier()
	local currentTycoon = getCurrentTycoon()
	if not currentTycoon then return end
	local tycoonFolder = workspace:FindFirstChild(currentTycoon)
	if not tycoonFolder then return end
	while autoOutputMultiplier do
		local buttonsFolder = tycoonFolder:FindFirstChild("Buttons")
		if buttonsFolder then
			for _, button in ipairs(buttonsFolder:GetChildren()) do
				if button.Name == "Upgrade" then
					for _, descendant in ipairs(button:GetDescendants()) do
						if descendant.Name == "Machine" then
							if tostring(descendant.Value) == "OutputMultiplierUpgrade" then
								local touchInterest = button:FindFirstChild("TouchInterest")
								if touchInterest then
									firetouchinterest(Players.LocalPlayer.Character.HumanoidRootPart, button, 0)
									task.wait(0.1)
									firetouchinterest(Players.LocalPlayer.Character.HumanoidRootPart, button, 1)
									break
								end
							end
						end
					end
				end
			end
		end
		task.wait(0.5)
	end
end

local function activateAllButtons()
	local currentTycoon = getCurrentTycoon()
	if not currentTycoon then return end
	local tycoonFolder = workspace:FindFirstChild(currentTycoon)
	if not tycoonFolder then return end
	local buttonsFolder = tycoonFolder:FindFirstChild("Buttons")
	if not buttonsFolder then return end
	while autoUpgrades do
		for _, button in ipairs(buttonsFolder:GetChildren()) do
			if button.Name ~= "PickupWeapon" then
				local hasInvalidMachine = false
				for _, descendant in ipairs(button:GetDescendants()) do
					if descendant.Name == "Machine" and descendant:IsA("ValueBase") then
						local machineValue = tostring(descendant.Value)
						if machineValue == "OutputMultiplierUpgrade" or machineValue == "Rebirth" then
							hasInvalidMachine = true
							break
						end
					end
				end
				if not hasInvalidMachine and button:FindFirstChild("ButtonSelectionBox") then
					local touchInterest = button:FindFirstChild("TouchInterest")
					if touchInterest then
						firetouchinterest(Players.LocalPlayer.Character.HumanoidRootPart, button, 0)
						task.wait(0.1)
						firetouchinterest(Players.LocalPlayer.Character.HumanoidRootPart, button, 1)
					end
				end
			end
		end
		task.wait(0.5)
	end
end

-- Enhanced GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = CoreGui
ScreenGui.Name = "SpamToggleGui"
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 300, 0, 320)
Frame.Position = UDim2.new(0.5, -150, 0.5, -160)
Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.BackgroundTransparency = 0.1

local UIGradient = Instance.new("UIGradient")
UIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 20))
})
UIGradient.Rotation = 45
UIGradient.Parent = Frame

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = Frame

local UIStroke = Instance.new("UIStroke")
UIStroke.Thickness = 2
UIStroke.Color = Color3.fromRGB(100, 100, 100)
UIStroke.Transparency = 0.5
UIStroke.Parent = Frame

local Shadow = Instance.new("ImageLabel")
Shadow.Parent = Frame
Shadow.BackgroundTransparency = 1
Shadow.Size = UDim2.new(1, 20, 1, 20)
Shadow.Position = UDim2.new(0, -10, 0, -10)
Shadow.Image = "rbxassetid://1316045217"
Shadow.ImageTransparency = 0.7
Shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
Shadow.ZIndex = -1
Shadow.Parent = Frame

local Header = Instance.new("TextLabel")
Header.Parent = Frame
Header.Size = UDim2.new(1, 0, 0, 40)
Header.Position = UDim2.new(0, 0, 0, 0)
Header.Text = "Noob Crusher Tycoon"
Header.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Header.TextColor3 = Color3.fromRGB(255, 255, 255)
Header.Font = Enum.Font.GothamBold
Header.TextSize = 18
Header.TextXAlignment = Enum.TextXAlignment.Center
Header.BackgroundTransparency = 0.2

local HeaderUICorner = Instance.new("UICorner")
HeaderUICorner.CornerRadius = UDim.new(0, 12)
HeaderUICorner.Parent = Header

local CloseButton = Instance.new("TextButton")
CloseButton.Parent = Frame
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.Text = "X"
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 16
CloseButton.BackgroundTransparency = 0.1

local CloseUICorner = Instance.new("UICorner")
CloseUICorner.CornerRadius = UDim.new(0, 8)
CloseUICorner.Parent = CloseButton

CloseButton.MouseButton1Click:Connect(function()
	ScreenGui:Destroy()
end)

local CreditLabel = Instance.new("TextLabel")
CreditLabel.Parent = Frame
CreditLabel.Size = UDim2.new(1, 0, 0, 20)
CreditLabel.Position = UDim2.new(0, 0, 1, -25)
CreditLabel.Text = "by lol1k.xyz"
CreditLabel.BackgroundTransparency = 1
CreditLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
CreditLabel.Font = Enum.Font.Gotham
CreditLabel.TextSize = 12
CreditLabel.TextXAlignment = Enum.TextXAlignment.Center

local function createToggleButton(parent, position, text, callback)
	local button = Instance.new("TextButton")
	button.Parent = parent
	button.Size = UDim2.new(0, 260, 0, 45)
	button.Position = position
	button.Text = text
	button.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.Font = Enum.Font.GothamMedium
	button.TextSize = 14
	button.BackgroundTransparency = 0.1

	local ButtonUICorner = Instance.new("UICorner")
	ButtonUICorner.CornerRadius = UDim.new(0, 8)
	ButtonUICorner.Parent = button

	local ButtonUIStroke = Instance.new("UIStroke")
	ButtonUIStroke.Thickness = 1
	ButtonUIStroke.Color = Color3.fromRGB(255, 255, 255)
	ButtonUIStroke.Transparency = 0.8
	ButtonUIStroke.Parent = button

	button.MouseButton1Click:Connect(function()
		callback(button)
	end)
	return button
end

local function toggleState(state, button, onText, offText)
	state = not state
	button.Text = state and onText or offText
	button.BackgroundColor3 = state and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
	return state
end

local MoneyButton = createToggleButton(Frame, UDim2.new(0.5, -130, 0, 50), "Start Auto-Money", function(button)
	autoMoney = toggleState(autoMoney, button, "Stop Auto-Money", "Start Auto-Money")
	if autoMoney then
		if autoRebirth then
			task.spawn(spamCombined)
		else
			task.spawn(spamRemote)
		end
	end
end)

local RebirthButton = createToggleButton(Frame, UDim2.new(0.5, -130, 0, 105), "Start Auto-Rebirthing", function(button)
	autoRebirth = toggleState(autoRebirth, button, "Stop Auto-Rebirthing", "Start Auto-Rebirthing")
	if autoRebirth then
		if autoMoney then
			task.spawn(spamCombined)
		else
			task.spawn(spamRebirth)
		end
	else
		if autoMoney then
			task.spawn(spamRemote)
		end
	end
end)

local OutputMultiplierButton = createToggleButton(Frame, UDim2.new(0.5, -130, 0, 160), "Start Auto-OutputMultiplier", function(button)
	autoOutputMultiplier = toggleState(autoOutputMultiplier, button, "Stop Auto-OutputMultiplier", "Start Auto-OutputMultiplier")
	if autoOutputMultiplier then task.spawn(spamOutputMultiplier) end
end)

local UpgradesButton = createToggleButton(Frame, UDim2.new(0.5, -130, 0, 215), "Start Auto-Upgrades", function(button)
	autoUpgrades = toggleState(autoUpgrades, button, "Stop Auto-Upgrades", "Start Auto-Upgrades")
	if autoUpgrades then task.spawn(activateAllButtons) end
end)
